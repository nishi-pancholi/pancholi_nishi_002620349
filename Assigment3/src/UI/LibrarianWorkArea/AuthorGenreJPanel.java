/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.LibrarianWorkArea;

import AppSystem.ApplicationSystem;
import Author.Author;
import Genres.Genre;
import LibrarianArea.Branch;
import LibrarianArea.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nishipancholi
 */
public class AuthorGenreJPanel extends javax.swing.JPanel {
       private UserAccount useraccount;
       private ApplicationSystem system;
       DefaultTableModel tableAuthorModel;
       DefaultTableModel tableGenreModel;
       

    /**
     * Creates new form AuthorJPanel
     */
    public AuthorGenreJPanel() {
        initComponents();
    }

    AuthorGenreJPanel(ApplicationSystem system, UserAccount useraccount) {
       initComponents();
        this.system = system;
        this.useraccount = useraccount;
        this.tableAuthorModel = (DefaultTableModel) authorTable.getModel();
        this.tableGenreModel = (DefaultTableModel) genreTable.getModel();
        
        populateAuthor();
        populateGenre();
    }

    public void populateAuthor() {
        tableAuthorModel.setRowCount(0);
        ArrayList<Branch> branchList = this.system.getBranchList();
        for(Branch branch: branchList){
            ArrayList<Author> authors=branch.getLibrary().getAuthorDirectory().getAuthorlist();
            for(Author auth: authors){
                Object[] row = new Object[1];
            
                row[0] = auth.getAuthorName();
                tableAuthorModel.addRow(row);
            }
        }
        
    }
    
    public void populateGenre() {
        
        tableGenreModel.setRowCount(0);
        ArrayList<Branch> branchList = this.system.getBranchList();
        for(Branch branch: branchList){
            ArrayList<Genre> genreList=branch.getLibrary().getGenreDirectory().getGenrelist();
            for(Genre gen: genreList){
                Object[] row = new Object[1];
            
                row[0] = gen.getGenreName();
                tableGenreModel.addRow(row);
            }
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fieldGenreName = new javax.swing.JTextField();
        fieldAuthorName = new javax.swing.JTextField();
        addAuthorBtn = new javax.swing.JButton();
        addGenreBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        authorTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        genreTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("GENRE");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, -1, 20));

        jLabel2.setText("AUTHOR");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, -1, 20));

        jLabel3.setText("Genre Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, -1, -1));

        jLabel4.setText("Author Name");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        add(fieldGenreName, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 240, -1));
        add(fieldAuthorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 240, -1));

        addAuthorBtn.setText("ADD AUTHOR");
        addAuthorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAuthorBtnActionPerformed(evt);
            }
        });
        add(addAuthorBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, -1, -1));

        addGenreBtn.setText("ADD GENRE");
        addGenreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGenreBtnActionPerformed(evt);
            }
        });
        add(addGenreBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, -1, -1));

        authorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Author Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(authorTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 330, 200));

        genreTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Genre Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(genreTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 330, 200));
    }// </editor-fold>//GEN-END:initComponents

    private void addAuthorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAuthorBtnActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Branch> branchList = this.system.getBranchList();
        for(Branch branch: branchList){
            ArrayList<Author> authors=branch.getLibrary().getAuthorDirectory().getAuthorlist();
            if(authors.isEmpty()){
                    branch.getLibrary().getAuthorDirectory().createAuthor(fieldAuthorName.getText());
                    JOptionPane.showMessageDialog(null, "Author Created.");
                    populateAuthor();   
            }else{
               for(Author auth: authors){
                if(auth.getAuthorName()!=fieldAuthorName.getText()){
                    branch.getLibrary().getAuthorDirectory().createAuthor(fieldAuthorName.getText());
                    JOptionPane.showMessageDialog(null, "Author Created.");
                    populateAuthor();
                }
            } 
            }
            
        }
        
    }//GEN-LAST:event_addAuthorBtnActionPerformed

    private void addGenreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGenreBtnActionPerformed
        // TODO add your handling code here:
        
         ArrayList<Branch> branchList = this.system.getBranchList();
        for(Branch branch: branchList){
            ArrayList<Genre> genreList=branch.getLibrary().getGenreDirectory().getGenrelist();
            if(genreList.isEmpty()){
                    branch.getLibrary().getGenreDirectory().createGenre(fieldGenreName.getText());
                    JOptionPane.showMessageDialog(null, "Genre Created.");
                    populateGenre();   
            }else{
                for(Genre genre: genreList){
                    if(fieldGenreName.getText()!=genre.getGenreName()){
                        branch.getLibrary().getGenreDirectory().createGenre(fieldGenreName.getText());
                        JOptionPane.showMessageDialog(null, "Genre Created.");
                        populateGenre();
                    }
                }
            }
        }
    }//GEN-LAST:event_addGenreBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAuthorBtn;
    private javax.swing.JButton addGenreBtn;
    private javax.swing.JTable authorTable;
    private javax.swing.JTextField fieldAuthorName;
    private javax.swing.JTextField fieldGenreName;
    private javax.swing.JTable genreTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
