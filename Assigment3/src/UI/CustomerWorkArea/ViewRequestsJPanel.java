/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.CustomerWorkArea;

import AppSystem.ApplicationSystem;
import Customer.Customer;
import LibrarianArea.Library;
import LibrarianArea.UserAccount;
import Services.RentalRequest;
import com.sun.net.httpserver.Request;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nishipancholi
 */
public class ViewRequestsJPanel extends javax.swing.JPanel {

    private UserAccount useraccount;
    private ApplicationSystem system;
    private Library lib;
    DefaultTableModel requestTableModel;
    /**
     * Creates new form ViewRequestsJPanel
     */
    public ViewRequestsJPanel() {
        initComponents();
    }

    ViewRequestsJPanel(ApplicationSystem system, UserAccount useraccount, Library lib) {
       initComponents();
       this.system = system;
       this.useraccount = useraccount;
       this.lib=lib;
       this.requestTableModel = (DefaultTableModel) requestTable.getModel();
       populate();
    }
    
    public void populate() {
        requestTableModel.setRowCount(0);
            
            Customer c=this.system.getCustomerDirectory().findById(this.useraccount.getAccountId());
            ArrayList<RentalRequest> reqList= c.getRentalRequestDirectory().getRequestlist();
            for(RentalRequest req: reqList){
                Object[] row = new Object[5];
            
                row[0] = req;
                row[1] = req.getStatus();
                row[2] = req.getDuration();
                row[3] = req.getMaterialType();
                row[4] = req.getMaterial().getName();
                
                requestTableModel.addRow(row);
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Status", "Duration", "Material Type", "Material Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 590, 250));

        jLabel1.setText("VIEW REQUEST HISTORY");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, -1));

        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow= requestTable.getSelectedRow();
        if(selectedRow >= 0){
            RentalRequest reqDetails=(RentalRequest) requestTable.getValueAt(selectedRow, 0);
            String status=reqDetails.getStatus();
            if(status=="Rented"){
                reqDetails.setStatus("Returned");
                reqDetails.getMaterial().setIsAvailable(true);
                JOptionPane.showMessageDialog(null,"Material Returned");
                populate();
            }
            else{
                JOptionPane.showMessageDialog(null,"Only Materials which are rented can be returned");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please Select Row");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
